<?php

namespace JFramework\Facades;

use Illuminate\Support\Facades\Facade;

/**
 * @method static bool exists($key)
 * @method static int del($key1, ...$otherKeys)
 * @method static int type($key)
 * @method static array keys($pattern)
 * @method static string randomKey()
 * @method static bool rename($srcKey, $dstKey)
 * @method static bool renameNx($srcKey, $dstKey)
 * @method static bool expire($key, $ttl)
 * @method static bool expireAt($key, $timestamp)
 * @method static int ttl($key)
 * @method static bool move($key, $dbIndex)
 * @method static mixed sort($key, $option = null)
 * @method static string dump($key)
 * @method static bool restore($key, $ttl, $value)
 * @method static bool set($key, $value, $timeout = null)
 * @method static bool|array setnx($key, $value)
 * @method static bool mset(array $array)
 * @method static int msetnx(array $array)
 * @method static string get($key)
 * @method static array mget(array $array)
 * @method static string getSet($key, $value)
 * @method static int incr($key)
 * @method static int incrBy($key, $value)
 * @method static int decr($key)
 * @method static int decrBy($key, $value)
 * @method static int rPush($key, ...$value1)
 * @method static int lPush($key, ...$value1)
 * @method static int lLen($key)
 * @method static array lRange($key, $start, $end)
 * @method static bool lTrim($key, $start, $stop)
 * @method static string lIndex($key, $index)
 * @method static bool lSet($key, $index, $value)
 * @method static bool lRem($key, $value, $count)
 * @method static string lPop($key)
 * @method static string rPop($key)
 * @method static string rpoplpush($srcKey, $dstKey)
 * @method static int sAdd($key, ...$value1)
 * @method static int sRem($key, ...$member1)
 * @method static string|array sPop($key, $count = 1)
 * @method static bool sMove($srcKey, $dstKey, $member)
 * @method static int sCard($key)
 * @method static bool sIsMember($key, $value)
 * @method static array sInter($key1, ...$otherKeys)
 * @method static int sInterStore($dstKey, $key1, ...$otherKeys)
 * @method static array sUnion($key1, ...$otherKeys)
 * @method static int sUnionStore($dstKey, $key1, ...$otherKeys)
 * @method static array sDiff($key1, ...$otherKeys)
 * @method static int sDiffStore($dstKey, $key1, ...$otherKeys)
 * @method static array sMembers($key)
 * @method static string|array sRandMember($key, $count = 1)
 * @method static int zAdd($key, $options, $score1, $value1, $score2 = null, $value2 = null, $scoreN = null, $valueN = null)
 * @method static float zIncrBy($key, $value, $member)
 * @method static int zRem($key, $member1, ...$otherMembers)
 * @method static array zRange($key, $start, $end, $withscores = null)
 * @method static array zRevRange($key, $start, $end, $withscore = null)
 * @method static array zRangeByScore($key, $start, $end, array $options = array())
 * @method static int zCard($key)
 * @method static float zScore($key, $member)
 * @method static int zRemRangeByScore($key, $start, $end)
 * @method static string ping()
 * @method static bool auth($password)
 * @method static bool select($dbIndex)
 * @method static string echo($message)
 * @method static array info($option = null)
 * @method static bool slaveof($host = '127.0.0.1', $port = 6379)
 * @method static int dbSize()
 * @method static bool flushDB()
 * @method static bool flushAll()
 * @method static bool save()
 * @method static bool bgsave()
 * @method static bool lastSave()
 * @method static bool bgrewriteaof()
 * @method static bool setex($key, $ttl, $value)
 * @method static int append($key, $value)
 * @method static array blPop($keys, $timeout)
 * @method static array brPop(array $keys, $timeout)
 * @method static int zUnionStore($output, $zSetKeys, array $weights = null, $aggregateFunction = 'SUM')
 * @method static int zInterStore($output, $zSetKeys, array $weights = null, $aggregateFunction = 'SUM')
 * @method static int zCount($key, $start, $end)
 * @method static int zRank($key, $member)
 * @method static int zRevRank($key, $member)
 * @method static int zRemRangeByRank($key, $start, $end)
 * @method static int hSet($key, $hashKey, $value)
 * @method static int hSetNx($key, $hashKey, $value)
 * @method static bool hMSet($key, $hashKeys)
 * @method static int hIncrBy($key, $hashKey, $value)
 * @method static string hGet($key, $hashKey)
 * @method static array hMGet($key, $hashKeys)
 * @method static int hDel($key, $hashKey1, ...$otherHashKeys)
 * @method static bool hExists($key, $hashKey)
 * @method static int hLen($key)
 * @method static array hKeys($key)
 * @method static array hVals($key)
 * @method static array hGetAll($key)
 * @method static bool multi($mode = Redis::MULTI)
 * @method static array exec()
 * @method static bool discard()
 * @method static array subscribe($channels, $callback)
 * @method static array unsubscribe($channels = null)
 * @method static void psubscribe($patterns, $callback)
 * @method static array punsubscribe($patterns = null)
 * @method static int publish($channel, $message)
 * @method static mixed config($operation, $key, $value)
 * @method static bool persist($key)
 * @method static int strlen($key)
 * @method static int setRange($key, $offset, $value)
 * @method static string getRange($key, $start, $end)
 * @method static int setBit($key, $offset, $value)
 * @method static int getBit($key, $offset)
 * @method static int rPushx($key, $value)
 * @method static int lPushx($key, $value)
 * @method static int lInsert($key, $position, $pivot, $value)
 * @method static string brpoplpush($srcKey, $dstKey, $timeout)
 * @method static array zRevRangeByScore($key, $start, $end, array $options = array())
 * @method static bool watch($key)
 * @method static bool unwatch()
 * @method static int|string object($string = '', $key = '')
 * @method static mixed slowLog(string $operation, int $length = null)
 * @method static mixed client($command, $value = '')
 * @method static int pttl($key)
 * @method static bool pExpire($key, $ttl)
 * @method static bool pExpireAt($key, $timestamp)
 * @method static bool migrate($host, $port, $key, $db, $timeout, $copy = false, $replace = false)
 * @method static bool psetex($key, $ttl, $value)
 * @method static float incrByFloat($key, $increment)
 * @method static bitOp($operation, $retKey, $key1, ...$otherKeys)
 * @method static int bitCount($key)
 * @method static float hIncrByFloat($key, $field, $increment)
 * @method static mixed eval($script, $args = array(), $numKeys = 0)
 * @method static mixed evalSha($scriptSha, $args = array(), $numKeys = 0)
 * @method static mixed script($command, $script)
 * @method static array time()
 * @method static array scan(&$iterator, $pattern = null, $count = 0)
 * @method static int bitpos($key, $bit, $start = 0, $end = null)
 * @method static array sScan($key, &$iterator, $pattern = null, $count = 0)
 * @method static bool|array zScan($key, &$iterator, $pattern = null, $count = 0)
 * @method static array zRangeByLex($key, $min, $max, $offset = null, $limit = null)
 * @method static array zRevRangeByLex($key, $min, $max, $offset = null, $limit = null)
 * @method static bool|array hScan($key, &$iterator, $pattern = null, $count = 0)
 * @method static mixed pubsub($keyword, $argument)
 * @method static int pfAdd($key, array $elements)
 * @method static int pfCount($key)
 * @method static bool pfMerge($destKey, array $sourceKeys)
 * @method static int hStrLen(string $key, string $field)
 * @method static int geoadd($key, $longitude, $latitude, $member)
 * @method static array geohash($key, ...$member)
 * @method static array geopos(string $key, string $member)
 * @method static array geodist($key, $member1, $member2, $unit = null)
 * @method static array georadius($key, $longitude, $latitude, $radius, $unit, array $options = null)
 * @method static array georadiusbymember($key, $member, $radius, $units, array $options = null)
 */
class Redis extends Facade
{
    /**
     * Get the registered name of the component.
     *
     * @return string
     */
    protected static function getFacadeAccessor()
    {
        return 'redis';
    }
}
